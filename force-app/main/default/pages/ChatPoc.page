<apex:page showHeader="false" standardStylesheets="=false">

    <head>
        <title>Chat</title>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh"
            crossorigin="anonymous" />
        <script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n"
            crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"
            crossorigin="anonymous"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6"
            crossorigin="anonymous"></script>

    </head>



    <!-- This script takes the endpoint URL parameter passed from the deployment page and makes it the action for the form -->
    <script type='text/javascript'> 

        (function () {
            function handlePageLoad() {
                var endpointMatcher = new RegExp("[\\?\\&]endpoint=([^&#]*)");
                var domainMatcher = new RegExp("^(https?:\\/\\/(.+?\\.)?(salesforce|salesforcescrt|salesforceliveagent)\\.com(\\/[A-Za-z0-9\\-\\._~:\\/\\?#\[\\]@!$&'\\(\\)\*\\+,;\\=]*)?)");

                var endpointAttr = endpointMatcher.exec(document.location.search)[1];
                // if the endpoint domain is valid
                if (domainMatcher.test(decodeURIComponent(endpointAttr))) {
                    document.getElementById('prechatForm').setAttribute('action',
                        decodeURIComponent(endpointAttr.replace("javascript:", "")));
                } else {
                    // invalid endpoint domain, set the action to empty
                    console.error("invalid domain: " + endpointAttr);
                    document.getElementById('prechatForm').setAttribute('action', "");
                }
            }
            if (window.addEventListener) {
                window.addEventListener('load', handlePageLoad, false);
            } else {
                window.attachEvent('onload', handlePageLoad, false);
            }
        })();
    </script>

    <h4>Preencha os campos abaixo:</h4>

    <!-- Form that gathers information from the chat visitor and sets the values to Chat Custom Details used later in the example -->
    <form method='post' id='prechatForm'>
        <div class="container">
        <div class="form-group">
            <label for="firstName">Nome</label>
            <input type='text' class="form-control"  name='liveagent.prechat:ContactFirstName' id='firstName' />
        </div>
        <div class="form-group">
            <label for="lastName">Sobrenome</label>
            <input type='text' class="form-control"  name='liveagent.prechat:ContactLastName' id='lastName' />
        </div>
        <div class="form-group">
            <label for="email">Email</label>
            <input type='text' class="form-control"  name='liveagent.prechat:ContactEmail' id='email' />
        </div>
        <div class="form-group">
            <label for="phone">Fone</label>
            <input type='text' class="form-control"  name='liveagent.prechat:ContactPhone' id='phone' />
            </div>
        <div class="form-group">
            <label for="subject">Assunto</label>
            <input type='text' class="form-control"  name='liveagent.prechat:CaseSubject' id='subject' />
            
        </div>
    
        <!-- Hidden fields used to set additional custom details -->
        <input type="hidden" name="liveagent.prechat:CaseStatus" value="New" />
        <br />

        <!-- This example assumes that "Chat" was added as picklist value to the Case Origin field -->
        <input type="hidden" name="liveagent.prechat:CaseOrigin" value="Chat" />
        <br />

        <!-- This example will set the Case Record Type to a specific value for the record type configured on the org. Lookup the case record type's id on your org and set it here -->
        <input type="hidden" name="liveagent.prechat:CaseRecordType" value="0120V0000026BYfQAM" />

        <!-- Used to set the visitor's name for the agent in the Console -->
        <input type="hidden" name="liveagent.prechat.name" id="prechat_field_name" />

        <!-- map: Use the data from prechat form to map it to the Salesforce record's fields -->
        <input type="hidden" name="liveagent.prechat.findorcreate.map:Contact" value="FirstName,ContactFirstName;LastName,ContactLastName;Email,ContactEmail;Phone,ContactPhone"
        />

        <input type="hidden" name="liveagent.prechat.findorcreate.map:Case" value="Subject,CaseSubject;Status,CaseStatus;Origin,CaseOrigin;RecordTypeId,CaseRecordType"
        />

        <!-- doFind, doCreate and isExactMatch example for a Contact: 
    Find a contact whose Email exactly matches the value provided by the customer in the form 
    If there's no match, then create a Contact record and set it's First Name, Last Name, Email, and Phone to the values provided by the customer -->
        <input type="hidden" name="liveagent.prechat.findorcreate.map.doFind:Contact" value="Email,true" />
        <input type="hidden" name="liveagent.prechat.findorcreate.map.isExactMatch:Contact" value="Email,true" />
        <input type="hidden" name="liveagent.prechat.findorcreate.map.doCreate:Contact" value="FirstName,true;LastName,true;Email,true;Phone,true"
        />

        <!-- doCreate example for a Case: create a case to attach to the chat, set the Case Subject to the value provided by the customer and set the case's Status and Origin fields -->
        <input type="hidden" name="liveagent.prechat.findorcreate.map.doCreate:Case" value="Subject,true;Status,true;Origin,true;RecordTypeId,true"
        />

        <!-- linkToEntity: Set the record Contact record, found/created above, as the Contact on the Case that's created -->
        <input type="hidden" name="liveagent.prechat.findorcreate.linkToEntity:Contact" value="Case,ContactId" />

        <!-- showOnCreate: Open the Contact and Case records as sub-tabs to the chat for the agent in the Console -->
        <input type="hidden" name="liveagent.prechat.findorcreate.showOnCreate:Contact" value="true" />
        <input type="hidden" name="liveagent.prechat.findorcreate.showOnCreate:Case" value="true" />

        <!-- saveToTranscript: Associates the records found / created, i.e. Contact and Case, to the Live Chat Transcript record. -->
        <input type="hidden" name="liveagent.prechat.findorcreate.saveToTranscript:Contact" value="ContactId" />
        <input type="hidden" name="liveagent.prechat.findorcreate.saveToTranscript:Case" value="CaseId" />

        <!-- displayToAgent: Hides the case record type from the agent -->
        <input type="hidden" name="liveagent.prechat.findorcreate.displayToAgent:CaseRecordType" value="false" />

        <!-- searchKnowledge: Searches knowledge article based on the text, this assumes that Knowledge is setup -->
        <input type="hidden" name="liveagent.prechat.knowledgeSearch:CaseSubject" value="true" />

        <input type='submit' value='Chat Now' class="btn btn-primary" id='prechat_submit' onclick="setName()" />
    </div>
        <!-- Set the visitor's name for the agent in the Console to first and last name provided by the customer -->
        <script type="text/javascript">
            function setName() {
                document.getElementById("prechat_field_name").value =
                    document.getElementById("firstName").value + " " + document.getElementById("lastName").value;
            }
        </script>

        <style type="text/css">
            p {
                font-weight: bolder
            }
        </style>

    </form>
</apex:page>